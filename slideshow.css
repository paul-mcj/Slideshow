/*CSS Style for slideshow.html*/

/******************************************************************************
	Table of Contents
	-----------------

	1. Global Styles
		1.1 -- :root (pseudo-class)
        1.2 -- :is(*, ::before, ::after)
        1.3 -- body
        1.4 -- img
        1.5 -- header
        1.6 -- header + h1
        1.7 -- a

	2. Class Specific Selectors
        2.1 -- .container
        2.2 -- .slides img 
        2.3 -- .text
        2.4 -- :is(.prev, .next)
        2.5 -- .next
        2.6 -- .bullet

	3. Hover Pseudo Elements
        3.1 -- .text:hover
        3.2 -- :is(.prev:hover, .next:hover)
        3.3 -- .bullet:hover
        3.4 -- :is(.active, .bullet:hover)
        
	4. Animation Specific
        4.1 -- .fade
        4.2 -- @keyframes fade

    5. Multiple Element Selectors
        5.1 -- :is(header, header + h1, .tracker, .text)
        5.2 -- :is(.text, .prev, .next) 
        5.3 -- :is(.text, .prev, .next, .bullet)

*******************************************************************************/

/******************************************************************************
1. Global Styles
******************************************************************************/

/* 1.1 Declares basic variables for the root of the html document */
:root {
    box-sizing: border-box;
    /*The below font-size ensures that the "base" font size will be responsive and scale appropriately with the viewport.*/
    font-size: calc(1vw + 1em);
    --main-font: "IM Fell DW Pica", serif;
    --sec-font: "Ewert", cursive;
    --color-100: hsl(0, 0%, 100%);
    --color-200: hsl(0, 100%, 50%);
    --bg-color-100: hsl(0, 0%, 0%);
}

/* 1.2 Rules the universal selector and basic pseudo classes to defined global styles*/
:is(*, ::before, ::after) {
    box-sizing: inherit;
    font-family: var(--main-font);
    background-color: var(--bg-color-100);
    color: var(--color-100);
}

/* 1.3 Outlines mostly margins for spacial width on the body, as well as slight changes per two media queries*/
body {
    margin: 0 0.5em;
}
@media (min-width: 40em) {
    body {
        margin: 0 0.5em;
    }
}
@media (min-width: 75em) {
    body {
        margin: 0 1em;
    }
}

/* 1.4 Default property applied to all images of the page so that they don't overflow the container */
img {
    max-width: 100%;
}

/* 1.5 Basic stylizing for the main header; uses rem units for consistency. Also incorporates similar breakpoints via two media queries.*/
header {
    font-size: 2rem;
}
@media (min-width: 40em) {
    header {
        font-size: 2.75rem;
    }
}
@media (min-width: 75em) {
    header {
        font-size: 3.5rem;
    }
}

/* 1.6 Since this is a small project, I used an adjacent sibling combinator to target the sub-heading of the page to give it some general font qualities and spacing. Again, two media queries manipulate its styles as the page sizes.*/
header + h1 {
    font-size: 1rem;
    margin-top: 0;
    color: var(--color-200);
    margin-bottom: 0.5em;
    font-family: var(--sec-font);
}
@media (min-width: 40em) {
    header + h1 {
        font-size: 1.5rem;
    }
}
@media (min-width: 75em) {
    header + h1 {
        font-size: 2rem;
    }
}

/* 1.7 Basic text decoration removed for all links on the page*/
a {
    text-decoration: none;
}

/******************************************************************************
2. Class Specific Selectors
******************************************************************************/

/* 2.1 Since the .text, .prev and .next selectors need to appear on top of the container as absolutely positioned, this should be relatively positioned. Horizontal auto margin centers it within the body using double containerization when page sizes. Since source images are deliberately set to width 1280px, this class has the same max-width applied to stop absolute elements from overflowing the container.*/
.container {
    position: relative;
    max-width: 1280px;
    margin: 0 auto;
}

/* 2.2 Images are hidden by default so that only the current one is shown.*/
.slides img {
    object-fit: fill;
    display: block;
}

/* 2.3 Any element with a class of text should also be hidden by default; also set its position to the top of its parent container*/
.text {
    display: none;
    background: hsla(0, 100%, 50%, 0.5);
    color: var(--color-100);
    top: 0;
    width: 100%;
    min-height: 2em;
}

/* 2.4 The two chevrons need their own unique styles to stand out from all other elements on the page; size with media queries.*/
:is(.prev, .next) {
    top: 40%;
    font-size: 1.5em;
    background: transparent;
    padding: 0 0.1em;
    -webkit-text-stroke: 1.5px black;
}
@media (min-width: 40em) {
    :is(.prev, .next) {
        font-size: 2em;
    }
}

/* 2.5 The next button needs to go all the way to the right of the relative parent container.*/
.next {
    right: 0;
}

/* 2.6 Bullets have their own styles, too. They change sizes with breakpoints. */
.bullet {
    margin-top: 1em;
    margin: 0 0.1em;
    height: 0.5em;
    width: 0.5em;
    background-color: var(--color-100);
    display: inline-block;
    border-radius: 50%;
}
@media (min-width: 40em) {
    .bullet {
        margin-top: 0.5em;
        height: 0.75em;
        width: 0.75em;
    }
}
@media (min-width: 75em) {
    .bullet {
        margin-top: 0.5em;
        height: 0.85em;
        width: 0.85em;
    }
}

/******************************************************************************
3. Hover Pseudo Elements
******************************************************************************/

/* 3.1 This class allows for color and padding changes to occur when the text is hovered.*/
.text:hover {
    background: hsla(0, 0%, 0%, 0.5);
    padding: 1em;
}
@media (min-width: 40em) {
    .text:hover {
        padding: 1.5em;
    }
}

/* 3.2 Adds more style to the chevrons when hovered*/
:is(.prev:hover, .next:hover) {
    color: var(--color-200);
    font-size: 2em;
    padding: 0 0.2em;
}
@media (min-width: 40em) {
    :is(.prev:hover, .next:hover) {
        font-size: 2.5em;
    }
}

/* 3.3 Adds style to the interactivity of the bullets.*/
.bullet:hover {
    transition: 1s ease;
}

/* 3.4 Adds color to these two selectors.*/
:is(.active, .bullet:hover) {
    background-color: var(--color-200);
}

/******************************************************************************
4. Animation
******************************************************************************/

/* 4.1 */
/* Fading animation is applied when images are cycled*/
.fade {
    animation-name: fade;
    animation-duration: 2s;
}

/* 4.2 Declares the specific opacity changes when images are cycled.*/
@keyframes fade {
    from {
        opacity: 0.5;
    }
    to {
        opacity: 1;
    }
}

/******************************************************************************
5. Multiple Element Selectors
******************************************************************************/

/* 5.1 Applies a centering property to these selectors*/
:is(header, header + h1, .tracker, .text) {
    text-align: center;
}

/* 5.2 These classes must be absolutely positioned*/
:is(.text, .prev, .next) {
    position: absolute;
}

/* 5.3 Since these are hovered and interactive, simply adds a pointer for user experience.*/
:is(.text, .prev, .next, .bullet) {
    cursor: pointer;
}
